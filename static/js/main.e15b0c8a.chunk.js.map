{"version":3,"sources":["components/Header.js","components/Footer.js","components/Places.js","components/Feed.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Places","places","map","place","id","PlaceId","PlaceName","CountryId","RegionId","CityId","CountryName","Feed","useState","setPlaces","query","setQuery","showPlaces","setShowPlaces","onSubmit","e","a","reqOptions","method","headers","fetch","URLSearchParams","response","json","console","log","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAWeA,MARf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,MCKJC,MARf,SAAgBH,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,0CC6BJE,MAhCf,SAAgBJ,GAEZ,OACI,qBAAKC,UAAU,SAAf,SACI,kCACI,gCACI,+BACI,4CACA,8CACA,4CACA,2CACA,yCACA,mDAGR,gCACKD,EAAMK,OAAOC,KAAI,SAAAC,GACd,OAAQ,qBAAIC,GAAID,EAAME,QAAd,UACJ,6BAAKF,EAAME,UACX,6BAAKF,EAAMG,YACX,6BAAKH,EAAMI,YACX,6BAAKJ,EAAMK,WACX,6BAAKL,EAAMM,SACX,6BAAKN,EAAMO,4BCgBxBC,MAtCf,WAAiB,IAAD,EACeC,mBAAS,IADxB,mBACLX,EADK,KACEY,EADF,OAEaD,mBAAS,IAFtB,mBAELE,EAFK,KAECC,EAFD,OAGuBH,oBAAS,GAHhC,mBAGLI,EAHK,KAGMC,EAHN,KA0BZ,OACI,sBAAKpB,UAAU,OAAf,UACG,uBAAMqB,SAvBb,SAAsBC,GAAG,4CAErB,8BAAAC,EAAA,6DACUC,EAAa,CACfC,OAAQ,MACRC,QAAS,CACL,iBAAkB,qDAClB,kBAAmB,wDACnB,gBAAkB,IAN9B,SASyBC,MAAM,4GAA8G,IAAIC,gBAAgB,CAACX,MAAOA,IAASO,GATlL,cASQK,EATR,gBAUqBA,EAASC,OAV9B,OAUID,EAVJ,OAWIE,QAAQC,IAAIH,EAAS1B,QACrBa,EAAUa,EAAS1B,QAZvB,4CAFqB,sBACrBmB,EAAEW,iBADmB,mCAgBrBC,GACAd,GAAc,GACdF,EAAS,KAKN,UACK,uBAAOiB,QAAQ,aAAf,kCACA,uBAAO5B,GAAG,aAAa6B,MAAOnB,EAAOoB,SAAU,SAAAf,GAAC,OAAIJ,EAASI,EAAEgB,OAAOF,QAAQG,UAAQ,IACtF,wBAAQvC,UAAU,SAAlB,uBAEHmB,EAAa,cAAC,EAAD,CAAQf,OAAQA,IAAoB,iCCrB/CoC,MAVf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAM,iBACd,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,MAAM,aCCLwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e15b0c8a.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n         </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './Places.css';\n\nfunction Places(props) { \n\n    return(\n        <div className=\"places\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Airport ID</th>\n                        <th>Airport Name</th>\n                        <th>Country ID</th>\n                        <th>Region ID</th>\n                        <th>City ID</th>\n                        <th>Country Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.places.map(place => {\n                        return (<tr id={place.PlaceId}>\n                            <th>{place.PlaceId}</th>\n                            <th>{place.PlaceName}</th>\n                            <th>{place.CountryId}</th>\n                            <th>{place.RegionId}</th>\n                            <th>{place.CityId}</th>\n                            <th>{place.CountryName}</th>\n                        </tr>)\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Places;","import React, { useState } from 'react';\nimport './Feed.css';\nimport Places from './Places';\n\nfunction Feed() {\n    const [places,setPlaces] = useState([])\n    const [query,setQuery] = useState(\"\")\n    const [showPlaces,setShowPlaces] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": \"f7fc70c755msh7a22b8eef5d6ae2p18c70ejsnd6dfb83277f3\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n            response = await response.json()\n            console.log(response.Places)\n            setPlaces(response.Places)\n        }\n        fetchMyAPI()\n        setShowPlaces(true)\n        setQuery(\"\")\n    }\n\n    return(\n        <div className=\"feed\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"queryInput\">State or Country:===</label>\n                <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n           </form>\n           { showPlaces ? <Places places={places}></Places> : <></>}\n        </div>\n    )\n}\n\nexport default Feed;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Feed from './components/Feed';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Airport Info\"></Header>\n      <Feed></Feed>\n      <Footer title=\"2020\"></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}